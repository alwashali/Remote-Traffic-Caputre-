// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: service/service.proto

package service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data                  []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Seralizedcapturreinfo []byte `protobuf:"bytes,2,opt,name=Seralizedcapturreinfo,proto3" json:"Seralizedcapturreinfo,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_service_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_service_service_proto_rawDescGZIP(), []int{0}
}

func (x *Packet) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Packet) GetSeralizedcapturreinfo() []byte {
	if x != nil {
		return x.Seralizedcapturreinfo
	}
	return nil
}

type EndpointInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname  string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IPAddress string `protobuf:"bytes,2,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
}

func (x *EndpointInfo) Reset() {
	*x = EndpointInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointInfo) ProtoMessage() {}

func (x *EndpointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointInfo.ProtoReflect.Descriptor instead.
func (*EndpointInfo) Descriptor() ([]byte, []int) {
	return file_service_service_proto_rawDescGZIP(), []int{1}
}

func (x *EndpointInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *EndpointInfo) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Okay string `protobuf:"bytes,1,opt,name=okay,proto3" json:"okay,omitempty"`
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_service_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_service_service_proto_rawDescGZIP(), []int{2}
}

func (x *Empty) GetOkay() string {
	if x != nil {
		return x.Okay
	}
	return ""
}

var File_service_service_proto protoreflect.FileDescriptor

var file_service_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x52, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34,
	0x0a, 0x15, 0x53, 0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x63, 0x61, 0x70, 0x74, 0x75,
	0x72, 0x72, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x53,
	0x65, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x72, 0x65,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1b,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6b, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6b, 0x61, 0x79, 0x32, 0x74, 0x0a, 0x0d, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x70, 0x75, 0x74, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x07,
	0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x33, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_service_proto_rawDescOnce sync.Once
	file_service_service_proto_rawDescData = file_service_service_proto_rawDesc
)

func file_service_service_proto_rawDescGZIP() []byte {
	file_service_service_proto_rawDescOnce.Do(func() {
		file_service_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_service_proto_rawDescData)
	})
	return file_service_service_proto_rawDescData
}

var file_service_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_service_service_proto_goTypes = []interface{}{
	(*Packet)(nil),       // 0: service.Packet
	(*EndpointInfo)(nil), // 1: service.EndpointInfo
	(*Empty)(nil),        // 2: service.Empty
}
var file_service_service_proto_depIdxs = []int32{
	0, // 0: service.RemoteCaputre.Capture:input_type -> service.Packet
	1, // 1: service.RemoteCaputre.GetReady:input_type -> service.EndpointInfo
	2, // 2: service.RemoteCaputre.Capture:output_type -> service.Empty
	2, // 3: service.RemoteCaputre.GetReady:output_type -> service.Empty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_service_proto_init() }
func file_service_service_proto_init() {
	if File_service_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_service_proto_goTypes,
		DependencyIndexes: file_service_service_proto_depIdxs,
		MessageInfos:      file_service_service_proto_msgTypes,
	}.Build()
	File_service_service_proto = out.File
	file_service_service_proto_rawDesc = nil
	file_service_service_proto_goTypes = nil
	file_service_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteCaputreClient is the client API for RemoteCaputre service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteCaputreClient interface {
	Capture(ctx context.Context, opts ...grpc.CallOption) (RemoteCaputre_CaptureClient, error)
	GetReady(ctx context.Context, in *EndpointInfo, opts ...grpc.CallOption) (*Empty, error)
}

type remoteCaputreClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteCaputreClient(cc grpc.ClientConnInterface) RemoteCaputreClient {
	return &remoteCaputreClient{cc}
}

func (c *remoteCaputreClient) Capture(ctx context.Context, opts ...grpc.CallOption) (RemoteCaputre_CaptureClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RemoteCaputre_serviceDesc.Streams[0], "/service.RemoteCaputre/Capture", opts...)
	if err != nil {
		return nil, err
	}
	x := &remoteCaputreCaptureClient{stream}
	return x, nil
}

type RemoteCaputre_CaptureClient interface {
	Send(*Packet) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type remoteCaputreCaptureClient struct {
	grpc.ClientStream
}

func (x *remoteCaputreCaptureClient) Send(m *Packet) error {
	return x.ClientStream.SendMsg(m)
}

func (x *remoteCaputreCaptureClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *remoteCaputreClient) GetReady(ctx context.Context, in *EndpointInfo, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/service.RemoteCaputre/GetReady", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteCaputreServer is the server API for RemoteCaputre service.
type RemoteCaputreServer interface {
	Capture(RemoteCaputre_CaptureServer) error
	GetReady(context.Context, *EndpointInfo) (*Empty, error)
}

// UnimplementedRemoteCaputreServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteCaputreServer struct {
}

func (*UnimplementedRemoteCaputreServer) Capture(RemoteCaputre_CaptureServer) error {
	return status.Errorf(codes.Unimplemented, "method Capture not implemented")
}
func (*UnimplementedRemoteCaputreServer) GetReady(context.Context, *EndpointInfo) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReady not implemented")
}

func RegisterRemoteCaputreServer(s *grpc.Server, srv RemoteCaputreServer) {
	s.RegisterService(&_RemoteCaputre_serviceDesc, srv)
}

func _RemoteCaputre_Capture_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RemoteCaputreServer).Capture(&remoteCaputreCaptureServer{stream})
}

type RemoteCaputre_CaptureServer interface {
	SendAndClose(*Empty) error
	Recv() (*Packet, error)
	grpc.ServerStream
}

type remoteCaputreCaptureServer struct {
	grpc.ServerStream
}

func (x *remoteCaputreCaptureServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *remoteCaputreCaptureServer) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RemoteCaputre_GetReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndpointInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteCaputreServer).GetReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.RemoteCaputre/GetReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteCaputreServer).GetReady(ctx, req.(*EndpointInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteCaputre_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.RemoteCaputre",
	HandlerType: (*RemoteCaputreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetReady",
			Handler:    _RemoteCaputre_GetReady_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Capture",
			Handler:       _RemoteCaputre_Capture_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "service/service.proto",
}
